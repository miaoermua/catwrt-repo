###
 # @Author: 2860950766@qq.com
 # @Date: 2023-10-12 22:25:55
 # @LastEditors: 2860950766@qq.com
 # @LastEditTime: 2023-10-12 23:09:25
 # @FilePath: \undefinedd:\Git\catwrt-repo\catwrt-repo
### 
#!/bin/bash

# TEST API

ping -c 1 api.miaoer.xyz > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Cannot reach api.miaoer.xyz, please contact developer for support."
  exit 1
fi

# backup distfeeds
if ! grep -q "catwrt" /etc/opkg/distfeeds.conf; then
  cp /etc/opkg/distfeeds.conf /etc/opkg/distfeeds_o.conf
fi

# Downloads
curl -s https://api.miaoer.xyz/api/v2/snippets/catwrt/repo > /tmp/catwrt-repo.json

# use
source /tmp/catwrt-repo.json

# arch
read -p "Enter [1] for amd64 or [2] for mt798x: " arch_choice

if [ $arch_choice -eq 1 ]; then
  arch_config=${amd64}
elif [ $arch_choice -eq 2 ]; then
  arch_config=${mt798x}
else
  echo "Invalid choice"
  exit 1
fi

# Testing connection
echo "Testing connection to sources..."

tcping -c 1 ${amd64[cfmain]} > /dev/null 2>&1 
if [ $? -ne 0 ]; then
  echo "Error: ${[cfmain]} unreachable."
fi

tcping -c 1 ${amd64[vercel]} > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Error: ${[vercel]} unreachable."
fi

tcping -c 1 ${amd64[netlify]} > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Error: ${[netlify]} unreachable."
fi

tcping -c 1 ${amd64[cfvercel]} > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Error: ${[cfvercel]} unreachable."
fi

tcping -c 1 ${amd64[cfnetlify]} > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Error: ${[cfnetlify]} unreachable."
fi

# Select software source
PS3="Select software source: "
select source in cfmain vercel netlify cfvercel cfnetlify local; do
  break
done

# local
if [ $source == "local" ]; then
  read -p "Enter local software source url: " source
else
  source=${arch_config[$source]}
fi

# Update distfeeds
if [ -f /etc/opkg/distfeeds_o.conf ]; then

  read -p "Backup found. Replace sources? [Y/n] " confirm
  if [ "$confirm" == "Y" ]; then
    
    cat > /etc/opkg/distfeeds.conf <<EOF
       src/gz openwrt_core $source/${arch_config[openwrt_core]}  
       src/gz openwrt_base $source/${arch_config[openwrt_base]}
       src/gz openwrt_luci $source/${arch_config[openwrt_luci]}
       src/gz openwrt_packages $source/${arch_config[openwrt_packages]}
       src/gz openwrt_routing $source/${arch_config[openwrt_routing]}
       src/gz openwrt_telephony $source/${arch_config[openwrt_telephony]}
    EOF

  else
    rm -f /etc/opkg/distfeeds.conf
  fi

else

  cat > /etc/opkg/distfeeds.conf <<EOF
    src/gz openwrt_core $source/${arch_config[openwrt_core]}
    src/gz openwrt_base $source/${arch_config[openwrt_base]}
    src/gz openwrt_luci $source/${arch_config[openwrt_luci]}
    src/gz openwrt_packages $source/${arch_config[openwrt_packages]}
    src/gz openwrt_routing $source/${arch_config[openwrt_routing]}
    src/gz openwrt_telephony $source/${arch_config[openwrt_telephony]}
  EOF
  
fi 

# opkg update

rm -f /var/lock/opkg.lock
opkg update

echo "Software sources updated successfully!"
echo "Enjoy!"
