#!/bin/bash

ping -c 1 api.miaoer.xyz > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Cannot reach api.miaoer.xyz, please contact developer for support."
  exit 1
fi

# 检查是否已备份,如果没有备份则备份
if ! grep -q "catwrt" /etc/opkg/distfeeds.conf; then
  cp /etc/opkg/distfeeds.conf /etc/opkg/distfeeds_o.conf
fi

# 从远程读取配置
repo=$(curl -s https://api.miaoer.xyz/api/v2/snippets/catwrt/repo)
source <(echo "$repo")  

# 获取用户的arch类型选择  
read -p "Enter [1]amd64 or for [2]mt798x: " arch_choice

if [ $arch_choice -eq 1 ]; then
  arch_config=${amd64}
elif [ $arch_choice -eq 2 ]; then
  arch_config=${mt798x}  
else
  echo "Invalid choice"
  exit 1
fi

## connection test

echo "Testing connection to software sources..."

tcping -c 1 ${arch_config[cfmain]} > /dev/null 2>&1
if [ $? -ne 0 ];then
  echo "${arch_config[cfmain]} unreachable."
fi

tcping -c 1 ${arch_config[vercel]} > /dev/null 2>&1  
if [ $? -ne 0 ];then
  echo "${arch_config[vercel]} unreachable."   
fi

tcping -c 1 ${arch_config[netlify]} > /dev/null 2>&1
if [ $? -ne 0 ];then
  echo "${arch_config[netlify]} unreachable."
fi

tcping -c 1 ${arch_config[cfvercel]} > /dev/null 2>&1
if [ $? -ne 0 ];then
  echo "${arch_config[cfvercel]} unreachable." 
fi

tcping -c 1 ${arch_config[cfnetlify]} > /dev/null 2>&1
if [ $? -ne 0 ];then
  echo "${arch_config[cfnetlify]} unreachable."
fi

# 选择软件源
PS3='Select software source (1-cfmain, 2-vercel, 3-netlify, 4-cfvercel, 5-cfnetlify, 6-local): '
select source in cfmain vercel netlify cfvercel cfnetlify local; do
  break
done

# 获取选择的数字
source_num=$(echo $source | grep -o '[0-9]*')

# 根据数字构建软件源
if [ $source_num -eq 1 ]; then
  source=${arch_config[cfmain]}
elif [ $source_num -eq 2 ]; then
  source=${arch_config[vercel]}
elif [ $source_num -eq 3 ]; then
  source=${arch_config[netlify]} 
elif [ $source_num -eq 4 ]; then
  source=${arch_config[cfvercel]}
elif [ $source_num -eq 5 ]; then
  source=${arch_config[cfnetlify]}
elif [ $source_num -eq 6 ]; then
  # 私有本地源,提示用户输入
  read -p "Enter private & local software source url: " source  
fi

# 检查是否存在备份文件
if [ -f /etc/opkg/distfeeds_o.conf ]; then

  # 提示用户选择 
  read -p "Backup software sources found. Replace with catwrt? [Y/n] " confirm
  
  if [ "$confirm" == "Y" ] || [ "$confirm" == "y" ]; then  
    # 用户选择了替换
    
    # 构建新软件源配置
    cat > /etc/opkg/distfeeds.conf <<EOF
    src/gz openwrt_core $source  
    src/gz openwrt_base $source/${arch_config[openwrt_base]}
    src/gz openwrt_luci $source/${arch_config[openwrt_luci]}
    src/gz openwrt_packages $source/${arch_config[openwrt_packages]}
    src/gz openwrt_routing $source/${arch_config[openwrt_routing]}
    src/gz openwrt_telephony $source/${arch_config[openwrt_telephony]}
    EOF

  else
    # 用户选择了禁用 
    
    rm -f /etc/opkg/distfeeds.conf
    
  fi
  
else

  # 没有备份文件,直接构建新配置
  cat > /etc/opkg/distfeeds.conf <<EOF
  src/gz openwrt_core $source
  src/gz openwrt_base $source/${arch_config[openwrt_base]}
  src/gz openwrt_luci $source/${arch_config[openwrt_luci]} 
  src/gz openwrt_packages $source/${arch_config[openwrt_packages]}
  src/gz openwrt_routing $source/${arch_config[openwrt_routing]}
  src/gz openwrt_telephony $source/${arch_config[openwrt_telephony]}
  EOF

fi

# 更新软件源索引
rm -f /var/lock/opkg.lock
opkg update

echo "Software sources updated successfully!"
